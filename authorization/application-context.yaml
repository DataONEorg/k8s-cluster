---
# This Role and Rolebinding example gives all permissions to the '${SERVICE_ACCOUNT}' Service account,
# but limited to only the '${SERVICE_ACCOUNT}' namespace.
apiVersion: v1
kind: ServiceAccount
metadata:
  #name: mynamespace-user
  name: ${SERVICE_ACCOUNT}
  namespace: ${SERVICE_ACCOUNT}

---
kind: Role
#apiVersion: rbac.authorization.k8s.io/v1beta1
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ${SERVICE_ACCOUNT}
  namespace: ${SERVICE_ACCOUNT}
rules:
- apiGroups: ["", "networking.k8s.io", "extensions", "apps","autoscaling"]
  #apiGroups: ["", "networking.k8s.io", "extensions", "apps","autoscaling", "rbac.authorization.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs: ["*"]
  ## Allow access to rbac roles and rolebindings (needed for Bitnami RabbitMQ charts):
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["create", "get", "delete"]
  ## Allow access to poddisruptionbudgets (needed for newer Bitnami Postgresql charts)
- apiGroups:  ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["create", "get", "delete"]

---
kind: RoleBinding
#apiVersion: rbac.authorization.k8s.io/v1beta1
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ${SERVICE_ACCOUNT}
  namespace: ${SERVICE_ACCOUNT}
subjects:
- kind: ServiceAccount
  name: ${SERVICE_ACCOUNT}
  namespace: ${SERVICE_ACCOUNT}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${SERVICE_ACCOUNT}
